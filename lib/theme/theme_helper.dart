import 'dart:ui';
import 'package:flutter/material.dart';
import 'package:aaryan_s_application3/core/utils/pref_utils.dart';
import 'package:aaryan_s_application3/core/utils/size_utils.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: colorScheme.primary,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: appTheme.teal400,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(8.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 21,
        space: 21,
        color: colorScheme.primary,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.gray600,
          fontSize: 16.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.gray900,
          fontSize: 14.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w400,
        ),
        displayMedium: TextStyle(
          color: colorScheme.onErrorContainer,
          fontSize: 41.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w700,
        ),
        headlineLarge: TextStyle(
          color: appTheme.gray900,
          fontSize: 32.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w700,
        ),
        headlineMedium: TextStyle(
          color: Color(0XFF111827),
          fontSize: 28.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w700,
        ),
        headlineSmall: TextStyle(
          color: colorScheme.onPrimary,
          fontSize: 24.fSize,
          fontFamily: 'PoetsenOne',
          fontWeight: FontWeight.w400,
        ),
        labelLarge: TextStyle(
          color: appTheme.blueGray700,
          fontSize: 12.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w600,
        ),
        titleLarge: TextStyle(
          color: appTheme.gray900,
          fontSize: 20.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w700,
        ),
        titleMedium: TextStyle(
          color: appTheme.blueGray900,
          fontSize: 16.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w700,
        ),
        titleSmall: TextStyle(
          color: colorScheme.primary,
          fontSize: 14.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w600,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFFFFFFFF),
    primaryContainer: Color(0XFFDC2626),

    // Error colors
    errorContainer: Color(0XFFF59E0B),
    onErrorContainer: Color(0XFF1B1C1E),

    // On colors(text colors)
    onPrimary: Color(0XFF881337),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Black
  Color get black900 => Color(0XFF000000);

  // Blue
  Color get blueA200 => Color(0XFF3B82F6);
  Color get blueA700 => Color(0XFF2563EB);

  // BlueGray
  Color get blueGray300 => Color(0XFF9CA3AF);
  Color get blueGray700 => Color(0XFF4B5563);
  Color get blueGray800 => Color(0XFF374151);
  Color get blueGray900 => Color(0XFF1F2937);

  // DeepPurple
  Color get deepPurpleA200 => Color(0XFF8B5CF6);
  Color get deepPurpleA20001 => Color(0XFF7C3AED);

  // Gray
  Color get gray100 => Color(0XFFEFF6FF);
  Color get gray10001 => Color(0XFFECFDF5);
  Color get gray200 => Color(0XFFE5E7EB);
  Color get gray50 => Color(0XFFF5F3FF);
  Color get gray5001 => Color(0XFFF9FAFB);
  Color get gray600 => Color(0XFF6B7280);
  Color get gray900 => Color(0XFF111827);
  Color get gray90014 => Color(0X14152133);

  // Green
  Color get greenA100 => Color(0XFFA7F3D0);

  // Indigo
  Color get indigo800 => Color(0XFF1E3A8A);

  // Lime
  Color get lime900 => Color(0XFF78350F);

  // Orange
  Color get orange800 => Color(0XFFD97706);

  // Pink
  Color get pink600 => Color(0XFFE11D48);
  Color get pink900 => Color(0XFF7F1D1D);

  // Purple
  Color get purple900 => Color(0XFF4C1D95);

  // Red
  Color get red400 => Color(0XFFF43F5E);
  Color get red50 => Color(0XFFFFF1F2);
  Color get red500 => Color(0XFFEF4444);

  // Teal
  Color get teal300 => Color(0XFF34D399);
  Color get teal400 => Color(0XFF10B981);
  Color get teal900 => Color(0XFF064E3B);

  // TealB
  Color get teal900B2 => Color(0XB2054E3B);

  // Yellow
  Color get yellow50 => Color(0XFFFFFBEB);
  Color get yellow700 => Color(0XFFFBBF24);
  Color get yellow900 => Color(0XFFF97316);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
